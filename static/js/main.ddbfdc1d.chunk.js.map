{"version":3,"sources":["service/api.js","App.js","index.js"],"names":["api","axios","create","baseURL","App","useState","title","setTitle","description","setDescription","tags","setTags","imgUrl","setImgUrl","ideas","setIdeas","useEffect","a","async","get","response","console","log","data","getIdeas","id","className","onSubmit","e","preventDefault","idea","name","type","img_url","post","htmlFor","placeholder","required","value","onChange","target","map","key","_id","src","alt","onClick","delete","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ddbfdc1d.chunk.js","sourcesContent":["import axios from 'axios' \r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://api-de-ideias.herokuapp.com/'\r\n})\r\n\r\nexport default api ","import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './ideaItem.css';\nimport api from './service/api';\n\nfunction App() {\n  const [title, setTitle] = useState('')\n  const [description, setDescription] = useState('')\n  const [tags, setTags] = useState('')\n  const [imgUrl, setImgUrl] = useState('')\n  const [ideas, setIdeas] = useState([])\n\n  useEffect(() => {\n    async function getIdeas() {\n      const response = await api.get('/idea')\n      console.log('response', response)\n      setIdeas(response.data)\n    }\n    getIdeas()\n  }, []\n  )\n\n  function updateIdea(id) {\n    console.log('update id', id)\n  }\n\n  async function deleteIdea(id) {\n    console.log('delete id', id)\n    const result = await api.delete(`/idea/${id}`)\n    if (result)\n      setIdeas(ideas.filter(idea => idea._id !== id))\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n\n    const idea = {\n      name: title,\n      description,\n      type: tags,\n      img_url: imgUrl\n    }\n\n    console.log('idea', idea)\n\n    const response = await api.post('/idea', idea)\n    console.log('response', response)\n\n    setIdeas([...ideas, response.data])\n  }\n\n\n  return (\n    <div id=\"app\">\n      <div className=\"jumbotron\">\n        <div className=\"container text-center\"><h2>Idea API</h2></div>\n      </div>\n\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-sm-4\">\n            <form onSubmit={handleSubmit}>\n              <div className=\"form-group\">\n                <label htmlFor=\"title\">Title</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"title\"\n                  placeholder=\"Enter your Idea Title\"\n                  required\n                  value={title}\n                  onChange={e => setTitle(e.target.value)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"description\">Description</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"description\"\n                  placeholder=\"Tell a little bit about your idea\"\n                  required\n                  value={description}\n                  onChange={e => setDescription(e.target.value)}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"tags\">Tags</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"tags\"\n                  placeholder=\"What kind of idea is this?\"\n                  value={tags}\n                  onChange={e => setTags(e.target.value)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"type\">Image</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"imgUr\"\n                  placeholder=\"Do you have any image to represent it? Paste the URL here!\"\n                  value={imgUrl}\n                  onChange={e => setImgUrl(e.target.value)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <button type=\"submit\" className=\"btn btn-success btn-block\">Create!</button>\n              </div>\n            </form>\n          </div>\n\n          <div className=\"col-sm-8\">\n            {ideas.map(idea => (\n              <div key={idea._id} className=\"card\">\n                <img className=\"card-img-top\" src={idea.img_url} alt=\"Card cap\" />\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">{idea.name}</h5>\n                  <p className=\"card-text\">{idea.description}</p>\n                  <strong>Tags: {idea.type} </strong>\n                </div>\n                <div className=\"card-body\">\n                  <button\n                    className=\"btn btn-warning\"\n                    onClick={() => { updateIdea(idea._id) }}\n                  >\n                    Edit Idea</button> &nbsp;\n                <button\n                    className=\"btn btn-danger\"\n                    onClick={() => { deleteIdea(idea._id) }}\n                  >Delete Idea</button>\n                </div>\n              </div>\n            ))}\n\n\n\n\n            <div className=\"col\"></div>\n          </div>\n\n        </div>\n\n      </div>\n    </div >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}